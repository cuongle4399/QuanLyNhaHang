<UserControl x:Class="restaurantManager.View.Fuction.Staff.changePassword"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:restaurantManager.View.Fuction.Staff"
             mc:Ignorable="d"
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <!-- built-in converter -->
        <BooleanToVisibilityConverter x:Key="BoolToVis"/>
        <!-- our inverse converter (declared in code-behind namespace) -->
        <local:InverseBooleanToVisibilityConverter x:Key="InvBoolToVis"/>
        <!-- icon converter (declared in code-behind) -->
        <local:BoolToEyeIconConverter x:Key="BoolToEyeIconConverter"/>

        <!-- Style for buttons with hover effect -->
        <Style x:Key="PrimaryButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="#29B6F6"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" 
                                Background="{TemplateBinding Background}" 
                                CornerRadius="8">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#0288D1"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Cursor" Value="Hand"/>
        </Style>

        <!-- Style for eye toggle buttons -->
        <Style x:Key="EyeButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Foreground" Value="#B0BEC5"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="#E0E0E0"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Style for text boxes with rounded corners -->
        <Style x:Key="RoundedTextBoxStyle" TargetType="TextBox">
            <Setter Property="Background" Value="#455A64"/>
            <Setter Property="Foreground" Value="#E0E0E0"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="6"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border x:Name="border" 
                                Background="{TemplateBinding Background}" 
                                CornerRadius="8">
                            <ScrollViewer x:Name="PART_ContentHost" 
                                        Margin="{TemplateBinding Padding}"
                                        Background="Transparent"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Style for password boxes with rounded corners -->
        <Style x:Key="RoundedPasswordBoxStyle" TargetType="PasswordBox">
            <Setter Property="Background" Value="#455A64"/>
            <Setter Property="Foreground" Value="#E0E0E0"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="6"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="PasswordBox">
                        <Border x:Name="border" 
                                Background="{TemplateBinding Background}" 
                                CornerRadius="8">
                            <ScrollViewer x:Name="PART_ContentHost" 
                                        Margin="{TemplateBinding Padding}"
                                        Background="Transparent"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>

    <Grid Background="#263238">
        <Border CornerRadius="10" Padding="20" BorderBrush="#455A64" BorderThickness="1" Background="#37474F">
            <StackPanel Orientation="Vertical" VerticalAlignment="Center" HorizontalAlignment="Center" Width="380">

                <TextBlock Text="ĐỔI MẬT KHẨU" FontSize="22" FontWeight="Bold" HorizontalAlignment="Center" Margin="0 0 0 20" Foreground="#E0E0E0"/>

                <!-- ========== OLD PASSWORD ========= -->
                <TextBlock Text="Mật khẩu hiện tại:" FontSize="14" FontWeight="SemiBold" Foreground="#B0BEC5"/>
                <Grid Margin="0 5 0 12">
                    <!-- TextBox: hiện ký tự thật khi IsShowOld = true -->
                    <TextBox Text="{Binding OldPassword, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                             Visibility="{Binding IsShowOld, Converter={StaticResource BoolToVis}}"
                             Style="{StaticResource RoundedTextBoxStyle}"/>
                    <!-- PasswordBox: hiển thị ●●● khi IsShowOld = false -->
                    <PasswordBox x:Name="pwdOld"
                                 PasswordChanged="PwdOld_PasswordChanged"
                                 Visibility="{Binding IsShowOld, Converter={StaticResource InvBoolToVis}}"
                                 Style="{StaticResource RoundedPasswordBoxStyle}"/>
                    <!-- Toggle button -->
                    <Button Command="{Binding ToggleOldPasswordCommand}"
                            Content="{Binding IsShowOld, Converter={StaticResource BoolToEyeIconConverter}}"
                            Style="{StaticResource EyeButtonStyle}"
                            Width="Auto" Height="28"
                            HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0 0 2 0"/>
                </Grid>

                <!-- ========== NEW PASSWORD ========= -->
                <TextBlock Text="Mật khẩu mới:" FontSize="14" FontWeight="SemiBold" Foreground="#B0BEC5"/>
                <Grid Margin="0 5 0 6">
                    <TextBox Text="{Binding NewPassword, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                             Visibility="{Binding IsShowNew, Converter={StaticResource BoolToVis}}"
                             Style="{StaticResource RoundedTextBoxStyle}"/>
                    <PasswordBox x:Name="pwdNew"
                                 PasswordChanged="PwdNew_PasswordChanged"
                                 Visibility="{Binding IsShowNew, Converter={StaticResource InvBoolToVis}}"
                                 Style="{StaticResource RoundedPasswordBoxStyle}"/>
                    <Button Command="{Binding ToggleNewPasswordCommand}"
                            Content="{Binding IsShowNew, Converter={StaticResource BoolToEyeIconConverter}}"
                            Style="{StaticResource EyeButtonStyle}"
                            Width="Auto" Height="28"
                            HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0 0 2 0"/>
                </Grid>


                <!-- ========== CONFIRM PASSWORD ========= -->
                <TextBlock Text="Xác nhận mật khẩu:" FontSize="14" FontWeight="SemiBold" Foreground="#B0BEC5"/>
                <Grid Margin="0 5 0 18">
                    <TextBox Text="{Binding ConfirmPassword, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                             Visibility="{Binding IsShowConfirm, Converter={StaticResource BoolToVis}}"
                             Style="{StaticResource RoundedTextBoxStyle}"/>
                    <PasswordBox x:Name="pwdConfirm"
                                 PasswordChanged="PwdConfirm_PasswordChanged"
                                 Visibility="{Binding IsShowConfirm, Converter={StaticResource InvBoolToVis}}"
                                 Style="{StaticResource RoundedPasswordBoxStyle}"/>
                    <Button Command="{Binding ToggleConfirmPasswordCommand}"
                            Content="{Binding IsShowConfirm, Converter={StaticResource BoolToEyeIconConverter}}"
                            Style="{StaticResource EyeButtonStyle}"
                            Width="Auto" Height="28"
                            HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0 0 2 0"/>
                </Grid>

                <!-- Actions -->
                <Button Content="Đổi mật khẩu"
                    Width="Auto" 
                    Height="40"
                    Style="{StaticResource PrimaryButtonStyle}"
                    Command="{Binding ChangePasswordCommand}"/>

            </StackPanel>
        </Border>
    </Grid>
</UserControl>